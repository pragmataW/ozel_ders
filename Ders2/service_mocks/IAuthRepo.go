// Code generated by mockery v2.46.3. DO NOT EDIT.

package mocks

import (
	dto "example/dto"
	model "example/model"

	mock "github.com/stretchr/testify/mock"
)

// IAuthRepo is an autogenerated mock type for the IAuthRepo type
type IAuthRepo struct {
	mock.Mock
}

// AddUser provides a mock function with given fields: dtoUser
func (_m *IAuthRepo) AddUser(dtoUser dto.User) error {
	ret := _m.Called(dtoUser)

	if len(ret) == 0 {
		panic("no return value specified for AddUser")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(dto.User) error); ok {
		r0 = rf(dtoUser)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetCredentials provides a mock function with given fields: username
func (_m *IAuthRepo) GetCredentials(username string) (model.User, error) {
	ret := _m.Called(username)

	if len(ret) == 0 {
		panic("no return value specified for GetCredentials")
	}

	var r0 model.User
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (model.User, error)); ok {
		return rf(username)
	}
	if rf, ok := ret.Get(0).(func(string) model.User); ok {
		r0 = rf(username)
	} else {
		r0 = ret.Get(0).(model.User)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(username)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIAuthRepo creates a new instance of IAuthRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIAuthRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *IAuthRepo {
	mock := &IAuthRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
